{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\stagiaire 6\\\\Desktop\\\\Venvis\\\\Venvis\\\\client\\\\src\\\\components\\\\Code.js\";\nimport React, { useState } from 'react';\nimport { CopyToClipboard } from 'react-copy-to-clipboard';\nimport { Card, Button, Tooltip, OverlayTrigger } from '@themesberg/react-bootstrap';\nimport Highlight, { Prism } from 'prism-react-renderer';\nimport themeStyle from \"../assets/syntax-themes/ghcolors.json\";\nexport default (props => {\n  const {\n    code = \"\",\n    language = \"jsx\"\n  } = props;\n  const [copied, setCopied] = useState(false);\n\n  const handleCopy = () => {\n    setCopied(true);\n    setTimeout(() => setCopied(false), 2000);\n  };\n\n  const CodeStyling = _ref => {\n    let {\n      className,\n      style,\n      tokens,\n      getLineProps,\n      getTokenProps\n    } = _ref;\n    return /*#__PURE__*/React.createElement(Card, {\n      className: \"position-relative pe-8 mb-2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(Card.Body, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"pre\", {\n      className: className,\n      style: style,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 9\n      }\n    }, tokens.map((line, i) => /*#__PURE__*/React.createElement(\"div\", Object.assign({}, getLineProps({\n      line,\n      key: i\n    }), {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 13\n      }\n    }), line.map((token, key) => /*#__PURE__*/React.createElement(\"span\", Object.assign({}, getTokenProps({\n      token,\n      key\n    }), {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 41\n      }\n    })))))), copied ? /*#__PURE__*/React.createElement(\"span\", {\n      className: \"text-success copy-code-text\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 19\n      }\n    }, \"Copied\") : null, /*#__PURE__*/React.createElement(OverlayTrigger, {\n      trigger: ['hover', 'focus'],\n      placement: \"top\",\n      overlay: /*#__PURE__*/React.createElement(Tooltip, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 20\n        }\n      }, \"Copy to clipboard\"),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(CopyToClipboard, {\n      text: code,\n      onCopy: handleCopy,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      size: \"sm\",\n      variant: \"primary\",\n      className: \"copy-code-button\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 13\n      }\n    }, \"Copy\")))));\n  };\n\n  return /*#__PURE__*/React.createElement(Highlight, {\n    Prism: Prism,\n    code: code,\n    language: language,\n    theme: themeStyle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 5\n    }\n  }, CodeStyling);\n});","map":{"version":3,"names":["React","useState","CopyToClipboard","Card","Button","Tooltip","OverlayTrigger","Highlight","Prism","themeStyle","props","code","language","copied","setCopied","handleCopy","setTimeout","CodeStyling","className","style","tokens","getLineProps","getTokenProps","map","line","i","key","token"],"sources":["C:/Users/stagiaire 6/Desktop/Venvis/Venvis/client/src/components/Code.js"],"sourcesContent":["\r\nimport React, { useState } from 'react';\r\nimport { CopyToClipboard } from 'react-copy-to-clipboard';\r\nimport { Card, Button, Tooltip, OverlayTrigger } from '@themesberg/react-bootstrap';\r\nimport Highlight, { Prism } from 'prism-react-renderer';\r\n\r\nimport themeStyle from \"../assets/syntax-themes/ghcolors.json\";\r\n\r\nexport default (props) => {\r\n  const { code = \"\", language = \"jsx\" } = props;\r\n  const [copied, setCopied] = useState(false);\r\n\r\n  const handleCopy = () => {\r\n    setCopied(true);\r\n    setTimeout(() => setCopied(false), 2000);\r\n  };\r\n\r\n  const CodeStyling = ({ className, style, tokens, getLineProps, getTokenProps }) => (\r\n    <Card className=\"position-relative pe-8 mb-2\">\r\n      <Card.Body>\r\n        <pre className={className} style={style}>\r\n          {tokens.map((line, i) => (\r\n            <div {...getLineProps({ line, key: i })}>\r\n              {line.map((token, key) => <span {...getTokenProps({ token, key })} />)}\r\n            </div>\r\n          ))}\r\n        </pre>\r\n\r\n        {copied ? <span className=\"text-success copy-code-text\">Copied</span> : null}\r\n\r\n        <OverlayTrigger\r\n          trigger={['hover', 'focus']}\r\n          placement=\"top\"\r\n          overlay={<Tooltip>Copy to clipboard</Tooltip>}\r\n        >\r\n          <CopyToClipboard text={code} onCopy={handleCopy}>\r\n            <Button size=\"sm\" variant=\"primary\" className=\"copy-code-button\">Copy</Button>\r\n          </CopyToClipboard>\r\n        </OverlayTrigger>\r\n      </Card.Body>\r\n    </Card>\r\n  );\r\n\r\n  return (\r\n    <Highlight Prism={Prism} code={code} language={language} theme={themeStyle}>\r\n      {CodeStyling}\r\n    </Highlight>\r\n  );\r\n};\r\n\r\n"],"mappings":";AACA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,eAAT,QAAgC,yBAAhC;AACA,SAASC,IAAT,EAAeC,MAAf,EAAuBC,OAAvB,EAAgCC,cAAhC,QAAsD,6BAAtD;AACA,OAAOC,SAAP,IAAoBC,KAApB,QAAiC,sBAAjC;AAEA,OAAOC,UAAP,MAAuB,uCAAvB;AAEA,gBAAgBC,KAAD,IAAW;EACxB,MAAM;IAAEC,IAAI,GAAG,EAAT;IAAaC,QAAQ,GAAG;EAAxB,IAAkCF,KAAxC;EACA,MAAM,CAACG,MAAD,EAASC,SAAT,IAAsBb,QAAQ,CAAC,KAAD,CAApC;;EAEA,MAAMc,UAAU,GAAG,MAAM;IACvBD,SAAS,CAAC,IAAD,CAAT;IACAE,UAAU,CAAC,MAAMF,SAAS,CAAC,KAAD,CAAhB,EAAyB,IAAzB,CAAV;EACD,CAHD;;EAKA,MAAMG,WAAW,GAAG;IAAA,IAAC;MAAEC,SAAF;MAAaC,KAAb;MAAoBC,MAApB;MAA4BC,YAA5B;MAA0CC;IAA1C,CAAD;IAAA,oBAClB,oBAAC,IAAD;MAAM,SAAS,EAAC,6BAAhB;MAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAA,gBACE,oBAAC,IAAD,CAAM,IAAN;MAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAA,gBACE;MAAK,SAAS,EAAEJ,SAAhB;MAA2B,KAAK,EAAEC,KAAlC;MAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAA,GACGC,MAAM,CAACG,GAAP,CAAW,CAACC,IAAD,EAAOC,CAAP,kBACV,6CAASJ,YAAY,CAAC;MAAEG,IAAF;MAAQE,GAAG,EAAED;IAAb,CAAD,CAArB;MAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAA,IACGD,IAAI,CAACD,GAAL,CAAS,CAACI,KAAD,EAAQD,GAAR,kBAAgB,8CAAUJ,aAAa,CAAC;MAAEK,KAAF;MAASD;IAAT,CAAD,CAAvB;MAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAA,GAAzB,CADH,CADD,CADH,CADF,EASGb,MAAM,gBAAG;MAAM,SAAS,EAAC,6BAAhB;MAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAA,YAAH,GAAiE,IAT1E,eAWE,oBAAC,cAAD;MACE,OAAO,EAAE,CAAC,OAAD,EAAU,OAAV,CADX;MAEE,SAAS,EAAC,KAFZ;MAGE,OAAO,eAAE,oBAAC,OAAD;QAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MAAA,uBAHX;MAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAA,gBAKE,oBAAC,eAAD;MAAiB,IAAI,EAAEF,IAAvB;MAA6B,MAAM,EAAEI,UAArC;MAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAA,gBACE,oBAAC,MAAD;MAAQ,IAAI,EAAC,IAAb;MAAkB,OAAO,EAAC,SAA1B;MAAoC,SAAS,EAAC,kBAA9C;MAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAA,UADF,CALF,CAXF,CADF,CADkB;EAAA,CAApB;;EA0BA,oBACE,oBAAC,SAAD;IAAW,KAAK,EAAEP,KAAlB;IAAyB,IAAI,EAAEG,IAA/B;IAAqC,QAAQ,EAAEC,QAA/C;IAAyD,KAAK,EAAEH,UAAhE;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GACGQ,WADH,CADF;AAKD,CAxCD"},"metadata":{},"sourceType":"module"}